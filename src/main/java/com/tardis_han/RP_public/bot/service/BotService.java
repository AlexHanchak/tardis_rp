package com.tardis_han.RP_public.bot.service;

import java.util.concurrent.ConcurrentHashMap;

import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Service;

import java.util.Map;

import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
// import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;
import java.util.List;

// import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.bots.AbsSender;


@Service
public class BotService {
    private final Map<Long, String> userMessages = new ConcurrentHashMap<>();
    private final AbsSender bot;

    public BotService(@Lazy AbsSender bot) {
        this.bot = bot;
    }

    public void executeMessage(SendMessage message) {
        try {
            bot.execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    public void saveUserMessage(Long chatId, String username, String phone, String question) {
        System.out.println("üìù –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç " + chatId + ": " + question + "name" + username + "phone" + phone);
        // –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å username, phone –∏ question –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        // –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫–æ–π-—Ç–æ DAO –∏–ª–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        // userMessages.put(chatId, question); // –≠—Ç–æ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç–∏
    }

    public String getUserMessage(Long chatId) {
        System.out.println("üì§ –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è chatId: " + chatId);
        System.out.println("üóÇ –í—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: " + userMessages);
        String message = userMessages.getOrDefault(chatId, "");
        System.out.println("üìù –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + message);
        return message;
    }

    public ReplyKeyboardMarkup getPhoneKeyboard() {
        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        keyboardMarkup.setResizeKeyboard(true);
        
        KeyboardButton phoneButton = new KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä");
        phoneButton.setRequestContact(true);
    
        KeyboardRow row = new KeyboardRow();
        row.add(phoneButton);
    
        keyboardMarkup.setKeyboard(List.of(row));
        return keyboardMarkup;
    }

    public void askForPhoneNumber(Long chatId) {
    SendMessage message = new SendMessage();
    message.setChatId(chatId);
    message.setText("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:");
    message.setReplyMarkup(getPhoneKeyboard());
    executeMessage(message);
    }
    
}
